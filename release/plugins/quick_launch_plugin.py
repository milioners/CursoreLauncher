import os
import json
from typing import Dict, List, Any
import customtkinter as ctk
from tkinter import messagebox, simpledialog
from plugin_system import ToolbarPluginInterface, EventPluginInterface

class QuickLaunchPlugin(ToolbarPluginInterface, EventPluginInterface):
    """–ü–ª–∞–≥–∏–Ω –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ - –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º"""
    
    def __init__(self):
        self.launcher = None
        self.quick_launch_file = "quick_launch.json"
        self.quick_programs = self.load_quick_launch()
        self.max_quick_programs = 5
    
    def get_name(self) -> str:
        return "Quick Launch"
    
    def get_version(self) -> str:
        return "1.0.0"
    
    def get_description(self) -> str:
        return "–î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º"
    
    def get_author(self) -> str:
        return "Cursor Launcher Team"
    
    def initialize(self, launcher_instance) -> bool:
        self.launcher = launcher_instance
        return True
    
    def cleanup(self) -> bool:
        self.save_quick_launch()
        return True
    
    def load_quick_launch(self) -> List[str]:
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"""
        if os.path.exists(self.quick_launch_file):
            try:
                with open(self.quick_launch_file, 'r', encoding='utf-8') as f:
                    return json.load(f)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: {e}")
        return []
    
    def save_quick_launch(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"""
        try:
            with open(self.quick_launch_file, 'w', encoding='utf-8') as f:
                json.dump(self.quick_programs, f, ensure_ascii=False, indent=2)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: {e}")
    
    def add_to_quick_launch(self, program_name: str):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫"""
        if program_name not in self.quick_programs:
            self.quick_programs.append(program_name)
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º
            if len(self.quick_programs) > self.max_quick_programs:
                self.quick_programs = self.quick_programs[-self.max_quick_programs:]
            self.save_quick_launch()
    
    def remove_from_quick_launch(self, program_name: str):
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–∑ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"""
        if program_name in self.quick_programs:
            self.quick_programs.remove(program_name)
            self.save_quick_launch()
    
    def get_toolbar_buttons(self) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        buttons = []
        
        if self.launcher and hasattr(self.launcher, 'programs'):
            for program_name in self.quick_programs:
                # –ò—â–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º –ª–∞—É–Ω—á–µ—Ä–∞
                program = None
                for prog in self.launcher.programs:
                    if prog['name'] == program_name:
                        program = prog
                        break
                
                if program:
                    buttons.append({
                        'text': f"üöÄ {program_name}",
                        'command': lambda p=program: self.launch_program(p),
                        'tooltip': f"–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫: {program_name}",
                        'icon': "üöÄ"
                    })
        
        # –ö–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã–º –∑–∞–ø—É—Å–∫–æ–º
        buttons.append({
            'text': "‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
            'command': self.show_quick_launch_manager,
            'tooltip': "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã–º –∑–∞–ø—É—Å–∫–æ–º",
            'icon': "‚öôÔ∏è"
        })
        
        return buttons
    
    def launch_program(self, program):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        if self.launcher and hasattr(self.launcher, 'launch_program'):
            self.launcher.launch_program(program)
    
    def show_quick_launch_manager(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã–º –∑–∞–ø—É—Å–∫–æ–º"""
        if not self.launcher:
            return
        
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        manager_window = ctk.CTkToplevel(self.launcher.root)
        manager_window.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã–º –∑–∞–ø—É—Å–∫–æ–º")
        manager_window.geometry("400x500")
        manager_window.resizable(False, False)
        
        # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
        quick_frame = ctk.CTkFrame(manager_window)
        quick_frame.pack(fill="both", expand=True, padx=20, pady=20)
        
        title_label = ctk.CTkLabel(
            quick_frame,
            text="üöÄ –ü—Ä–æ–≥—Ä–∞–º–º—ã –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞",
            font=ctk.CTkFont(size=18, weight="bold")
        )
        title_label.pack(pady=10)
        
        # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º
        for program_name in self.quick_programs:
            program_frame = ctk.CTkFrame(quick_frame)
            program_frame.pack(fill="x", padx=10, pady=5)
            
            name_label = ctk.CTkLabel(
                program_frame,
                text=program_name,
                font=ctk.CTkFont(size=14)
            )
            name_label.pack(side="left", padx=10, pady=5)
            
            remove_button = ctk.CTkButton(
                program_frame,
                text="üóëÔ∏è",
                width=30,
                command=lambda name=program_name: self.remove_from_quick_launch(name)
            )
            remove_button.pack(side="right", padx=10, pady=5)
        
        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        add_button = ctk.CTkButton(
            quick_frame,
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É",
            command=self.show_add_program_dialog
        )
        add_button.pack(pady=10)
    
    def show_add_program_dialog(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        if not self.launcher or not hasattr(self.launcher, 'programs'):
            return
        
        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –≤—ã–±–æ—Ä–∞
        program_names = [prog['name'] for prog in self.launcher.programs 
                        if prog['name'] not in self.quick_programs]
        
        if not program_names:
            messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫!")
            return
        
        # –ü—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞
        selected = simpledialog.askstring(
            "–î–æ–±–∞–≤–∏—Ç—å –≤ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫",
            f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:\n{', '.join(program_names)}"
        )
        
        if selected and selected in program_names:
            self.add_to_quick_launch(selected)
            messagebox.showinfo("–£—Å–ø–µ—Ö", f"–ü—Ä–æ–≥—Ä–∞–º–º–∞ '{selected}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫!")
    
    def on_program_launched(self, program: Dict[str, Any]) -> None:
        """–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –≤ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫"""
        program_name = program.get('name', '')
        if program_name:
            self.add_to_quick_launch(program_name)
    
    def on_program_added(self, program: Dict[str, Any]) -> None:
        """–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º"""
        pass
    
    def on_program_removed(self, program: Dict[str, Any]) -> None:
        """–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã —É–±–∏—Ä–∞–µ–º –µ—ë –∏–∑ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"""
        program_name = program.get('name', '')
        if program_name:
            self.remove_from_quick_launch(program_name) 